<Window x:Class="Salamandra.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Salamandra"
        xmlns:converters="clr-namespace:Salamandra.Converters"
        xmlns:controls="clr-namespace:Salamandra.Controls"
        xmlns:extensions="clr-namespace:Salamandra.Extensions"
        xmlns:enums="clr-namespace:Salamandra.Engine.Domain.Enums;assembly=Salamandra.Engine"
        xmlns:tracks="clr-namespace:Salamandra.Engine.Domain.Tracks;assembly=Salamandra.Engine"
        xmlns:usercontrols="clr-namespace:Salamandra.UserControls"
        xmlns:strings="clr-namespace:Salamandra.Strings"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="720" Width="1280"
        WindowStartupLocation="CenterScreen" Closing="Window_Closing"
        UseLayoutRounding="True" Loaded="Window_Loaded" WindowState="Maximized"
        SizeChanged="Window_SizeChanged">
    <Window.Resources>
        <converters:SameObjectToBoolConverter x:Key="SameObjectToBoolConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:DataTypeConverter x:Key="DataTypeConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewPlaylistCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenPlaylistCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SavePlaylistCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="Delete" Command="{Binding RemoveAllTracksCommand}"/>
        <KeyBinding Key="P" Command="{Binding StartPlaybackCommand}"/>
        <KeyBinding Key="S" Command="{Binding StopPlaybackCommand}"/>
        <KeyBinding Key="N" Command="{Binding NextTrackCommand}"/>
    </Window.InputBindings>
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_File}">
                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_New}" Command="{Binding NewPlaylistCommand}" InputGestureText="Ctrl+N">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/new.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Open}" Command="{Binding OpenPlaylistCommand}" InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/open.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Save}" Command="{Binding SavePlaylistCommand}" InputGestureText="Ctrl+S">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/save.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_SaveAs}" Command="{Binding SavePlaylistAsCommand}"/>
            </MenuItem>

            <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Edit}">
                <MenuItem Header="{x:Static strings:ViewsTexts.Misc_Cut}" InputGestureText="Ctrl+X"
                              Command="{Binding CutTracksCommand}"
                              CommandParameter="{Binding SelectedItems, ElementName=playlist}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/cut.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.Misc_Copy}" InputGestureText="Ctrl+C"
                              Command="{Binding CopyTracksCommand}"
                              CommandParameter="{Binding SelectedItems, ElementName=playlist}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/copy.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.Misc_Paste}" InputGestureText="Ctrl+V"
                              Command="{Binding PasteTracksCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/paste.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Delete}" InputGestureText="Del"
                          Command="{Binding RemoveTracksFromPlaylistCommand}" CommandParameter="{Binding SelectedItems, ElementName=playlist}"/>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_DeleteAll}" InputGestureText="Ctrl+Del" Command="{Binding RemoveAllTracksCommand}"/>
            </MenuItem>

            <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Playlist}">
                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_AddAudioTracks}" Command="{Binding AddFilesToPlaylistCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Playlist/audio_file.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_AddRandomTrack}" Command="{Binding AddRandomTrackCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Playlist/music_folder.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_AddTimeAnnouncement}" Command="{Binding AddTimeAnnouncementTrackCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Playlist/alarm_clock.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_AddPlaylistTrack}" Command="{Binding AddPlaylistTrackCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Playlist/playlist_file.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_AddStopPlaylistTrack}" Command="{Binding AddStopTrackCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Playlist/remote_control.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_ShufflePlaylist}" Command="{Binding ShufflePlaylistCommand}"/>
            </MenuItem>

            <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Media}">
                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_StartPlayback}" InputGestureText="P"
                          Command="{Binding StartPlaybackCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/play.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_StopPlayback}" InputGestureText="S"
                          Command="{Binding StopPlaybackCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/stop.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_PlayNextTrack}" InputGestureText="N"
                          Command="{Binding NextTrackCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/next.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_StopAfterCurrentTrack}" IsCheckable="True"
                          IsChecked="{Binding StopAfterCurrentTrack}" IsEnabled="{Binding IsPlaying}"/>
            </MenuItem>

            <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Tools}">
                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Settings}" Command="{Binding OpenSettingsCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/Toolbar/service.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_OpenTodayLog}" Command="{Binding OpenCurrentLogCommand}"/>
                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_OpenLogFolder}" Command="{Binding OpenLogFolderCommand}"/>
            </MenuItem>

            <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Help}">
                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_About}" Command="{Binding OpenAboutCommand}" />
            </MenuItem>
        </Menu>

        <ToolBarTray DockPanel.Dock="Top" Background="{StaticResource ContainerBackground}">
            <ToolBar>
                <Button Command="{Binding NewPlaylistCommand}" ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_NewPlaylist}">
                    <controls:AutoDisableImage Source="/Images/Icons/Toolbar/new.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                </Button>

                <Button Command="{Binding OpenPlaylistCommand}" ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_OpenPlaylist}">
                    <controls:AutoDisableImage Source="/Images/Icons/Toolbar/open.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                </Button>

                <Button Command="{Binding SavePlaylistCommand}" ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_SavePlaylist}">
                    <controls:AutoDisableImage Source="/Images/Icons/Toolbar/save.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                </Button>

                <Separator/>

                <Button Command="{Binding AddFilesToPlaylistCommand}" ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_AddAudioFiles}">
                    <controls:AutoDisableImage Source="/Images/Icons/Toolbar/plus.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                </Button>

                <Button Command="{Binding RemoveTracksFromPlaylistCommand}" CommandParameter="{Binding SelectedItems, ElementName=playlist}"
                        ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_DeleteSelectedFiles}">
                    <controls:AutoDisableImage Source="/Images/Icons/Toolbar/delete.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                </Button>

                <Separator/>

                <Button Command="{Binding OpenSettingsCommand}" ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_Settings}">
                    <controls:AutoDisableImage Source="/Images/Icons/Toolbar/service.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <!-- Top Grid -->
        <Grid DockPanel.Dock="Top" Margin="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>

            <!-- Horário -->
            <StackPanel Grid.Column="0">
                <TextBlock Text="{Binding CurrentDateTime, StringFormat='ddd, dd\\/MM\\/yyyy', FallbackValue='seg, 18/05/2022'}"
                           HorizontalAlignment="Center" FontWeight="DemiBold" FontSize="14"/>
                <Border Grid.Column="0" Height="48" Margin="0 4 0 0"
                        BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding CurrentDateTime, StringFormat=HH\\:mm\\:ss}"
                           FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
            </StackPanel>

            <!-- Faixa Atual -->
            <StackPanel Grid.Column="1" Margin="8 0 0 0">
                <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_NowPlaying}" HorizontalAlignment="Left"
                           FontWeight="DemiBold" FontSize="14">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Border Height="48" Margin="0 4 0 0" Cursor="Hand"
                        BorderBrush="Black" BorderThickness="1">
                    <Border.InputBindings>
                        <MouseBinding MouseAction="LeftClick" Command="{Binding FocusOnCurrentTrackCommand}"/>
                    </Border.InputBindings>
                    <TextBlock Text="{Binding TrackDisplayName}" 
                           FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="Transparent"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEventPlaying}" Value="True">
                                    <Setter Property="Background" Value="LightYellow"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <Grid Margin="0 4 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_NowPlaying_RemainingTime}" Grid.Column="0" VerticalAlignment="Center"
                               Foreground="{StaticResource ControlDisabledGlythColour}"/>

                    <TextBlock Text="{Binding RemainingTime, StringFormat='mm\\:ss', TargetNullValue='--:--', FallbackValue='00:00'}"
                               Grid.Column="1" VerticalAlignment="Center" FontWeight="Bold" Margin="8 0 0 0"/>

                    <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_NowPlaying_EndTime}" Grid.Column="3" VerticalAlignment="Center"
                               Foreground="{StaticResource ControlDisabledGlythColour}"/>

                    <TextBlock Text="{Binding EndingTimeOfDay, StringFormat='hh\\:mm\\:ss', TargetNullValue='--:--:--', FallbackValue='00:00:00'}"
                               Grid.Column="4" VerticalAlignment="Center" FontWeight="Bold" Margin="8 0 0 0"/>

                </Grid>
            </StackPanel>

            <!-- Próxima Faixa -->
            <StackPanel Grid.Column="2" Margin="8 0 0 0">
                <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_PlayingNext}"
                           FontWeight="DemiBold" FontSize="14"/>
                <Border Height="48" Margin="0 4 0 0" Background="Transparent" Cursor="Hand"
                    BorderBrush="Black" BorderThickness="1">
                    <Border.InputBindings>
                        <MouseBinding MouseAction="LeftClick" Command="{Binding FocusOnNextTrackCommand}"/>
                    </Border.InputBindings>
                    <TextBlock Text="{Binding PlaylistManager.NextTrack.FriendlyName}"
                           FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
            </StackPanel>
        </Grid>

        <!-- Status Bar -->
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding BuildVersionText}"/>
            </StatusBarItem>
        </StatusBar>

        <!-- Seek Bar -->
        <controls:ExtendedSlider DockPanel.Dock="Bottom" Minimum="0" x:Name="SeekBar" VerticalAlignment="Center" IsEnabled="{Binding AllowSeekDrag}"                            
                                 Maximum="{Binding TrackLengthInSeconds, Mode=OneWay}" Value="{Binding TrackPositionInSeconds}"                                     
                                 TickFrequency="1" IsSnapToTickEnabled="True" LargeChange="20" SmallChange="5"                                     
                                 DragStartedCommand="{Binding SeekBarDragStartedCommand}" DragCompletedCommand="{Binding SeekBarDragCompletedCommand}"
                                 AutoToolTipPlacement="TopLeft" CustomToolTipContent="{Binding TrackPositionTime, Mode=OneWay, StringFormat={}{0:hh':'mm':'ss}, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="8 8 8 8" Style="{StaticResource SliderStyle}"/>

        <!-- Controls Grid -->
        <Grid DockPanel.Dock="Bottom" Margin="8 8 8 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Width="30" Height="30" Command="{Binding StartPlaybackCommand}"
                    ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_StartPlayback}">
                <Image Source="/Images/Icons/Player/play.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </Button>

            <Button Grid.Column="1" Margin="8 0 0 0" Width="30" Height="30" Command="{Binding StopPlaybackCommand}"
                    ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_StopPlayback}">
                <Image Source="/Images/Icons/Player/stop.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </Button>

            <ToggleButton Grid.Column="2" Margin="8 0 0 0" Width="30" Height="30" Command="{Binding TogglePlayPauseCommand}" IsChecked="{Binding IsPaused}"
                          ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_Pause}">
                <Image Source="/Images/Icons/Player/pause.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </ToggleButton>

            <Button Grid.Column="3" Margin="8 0 0 0" Width="30" Height="30" Command="{Binding NextTrackCommand}"
                    ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_NextTrack}">
                <Image Source="/Images/Icons/Player/next.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </Button>

            <ToggleButton Grid.Column="4" Margin="8 0 0 0" Width="30" Height="30" 
                          IsChecked="{Binding StopAfterCurrentTrack}" IsEnabled="{Binding IsPlaying}"
                          ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_StopAfterCurrentTrack}">
                <Image Source="/Images/Icons/Player/stop-next.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </ToggleButton>

            <ComboBox Grid.Column="5" SelectedItem="{Binding PlaylistManager.PlaylistMode}"
                      ItemsSource="{Binding Source={extensions:EnumBindingSource {x:Type enums:PlaylistMode}}}"
                      HorizontalAlignment="Left" VerticalAlignment="Center" Width="150" Margin="8 0 0 0"
                      ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_PlaylistMode}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding UpdateNextTrackCommand}"></i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <StackPanel Orientation="Horizontal" Grid.Column="6" Margin="8 0 0 0">
                <ToggleButton Padding="4" Margin="4 0 0 0" IsChecked="{Binding VolumeMuted}"
                              Style="{StaticResource FlatToggleButtonStyle}"
                              ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_MuteUnmuteVolume}">
                    <Image VerticalAlignment="Center" HorizontalAlignment="Center"
                           RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="/Images/Icons/Player/volume.png" />
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding VolumeMuted}">
                                        <Setter Property="Source" Value="/Images/Icons/Player/volume_off.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding VolumeMutedChangedCommand}"/>
                        </i:EventTrigger>

                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding VolumeMutedChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ToggleButton>

                <controls:ExtendedSlider Value="{Binding CurrentVolume}" x:Name="VolumeControl" 
                                         Width="128" VerticalAlignment="Center" Margin="8 0 0 0"
                                         Minimum="{Binding SoundEngine.VolumeMin}" Maximum="{Binding SoundEngine.VolumeMax}" 
                                         TickFrequency="{Binding SoundEngine.VolumeStep}" 
                                         LargeChange="{Binding SoundEngine.VolumeLargeStep}" 
                                         SmallChange="{Binding SoundEngine.VolumeSmallStep}" 
                                         AutoToolTipPlacement="TopLeft" Style="{StaticResource SliderStyle}"
                                         CustomToolTipContent="{Binding CurrentVolume, Mode=OneWay, StringFormat={}{0:P0}, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding VolumeControlValueChangedCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls:ExtendedSlider>
            </StackPanel>

            <StackPanel Grid.Column="7">
                <TextBlock Text="{Binding TrackPositionTime, StringFormat=mm\\:ss, TargetNullValue='--:--', FallbackValue='00:00', Mode=OneWay}" 
                           FontSize="16" FontWeight="Bold" HorizontalAlignment="Right"/>
                <TextBlock Text="{Binding TrackLengthTime, StringFormat=mm\\:ss, TargetNullValue='--:--', FallbackValue='00:00', Mode=OneWay}"
                           FontWeight="Bold" HorizontalAlignment="Right"/>
            </StackPanel>
        </Grid>

        <Grid Margin="8 0 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="420"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_UpcomingEvents}" Grid.Column="0" VerticalAlignment="Bottom"/>

                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                        <Button Command="{Binding PlayLateEventsCommand}" Padding="4"
                                Style="{StaticResource FlatButtonStyle}"
                                ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_PlayLateEvents}">
                            <controls:AutoDisableImage Source="/Images/Icons/Toolbar/play.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                        </Button>

                        <Button Command="{Binding DiscardLateEventsCommand}" Padding="4" Margin="4 0 0 0"
                                Style="{StaticResource FlatButtonStyle}"
                                ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_DiscardLateEvents}">
                            <controls:AutoDisableImage Source="/Images/Icons/Toolbar/trash.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                        </Button>

                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="4 0 0 0"/>

                        <ToggleButton Padding="4" Margin="4 0 0 0" IsChecked="{Binding EnableEvents}"
                                      Style="{StaticResource FlatToggleButtonStyle}"
                                      ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_EnableDisableEvents}">
                            <Image Source="/Images/Icons/Toolbar/checkmark.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                        </ToggleButton>

                        <Button Command="{Binding OpenEventListCommand}" Padding="4" Margin="4 0 0 0"
                                Style="{StaticResource FlatButtonStyle}"
                                ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_OpenEventList}">
                            <Image Source="/Images/Icons/Toolbar/calendar.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                        </Button>
                    </StackPanel>
                </Grid>

                <ListView Grid.Row="1" Margin="0 4 0 0" ItemsSource="{Binding ScheduleManager.EventsQueue}" SelectionMode="Single"
                          Style="{StaticResource ListViewStyle}" ItemContainerStyle="{StaticResource ListViewItemStyle}"
                          Name="UpcomingEventsListView" MouseDown="UpcomingEventsListView_MouseDown"
                          IsEnabled="{Binding EnableEvents}">
                    <ListView.View>
                        <GridView>
                            <!-- Icon -->
                            <GridViewColumn Header="{x:Static strings:ViewsTexts.MainWindow_UpcomingEvents_Time}"
                                            Width="72">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Width="8" Height="8" RenderOptions.BitmapScalingMode="NearestNeighbor">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding EventPriority}" Value="{x:Static enums:EventPriority.Low}">
                                                                <Setter Property="Source" Value="/Images/Icons/Events/bullet_green.png"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding EventPriority}" Value="{x:Static enums:EventPriority.High}">
                                                                <Setter Property="Source" Value="/Images/Icons/Events/bullet_red.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>

                                            <TextBlock Text="{Binding StartDateTime, StringFormat='HH:mm:ss'}" Margin="4 0 0 0"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="{x:Static strings:ViewsTexts.MainWindow_UpcomingEvents_Mode}"                                             
                                            Width="60">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Immediate}" Value="False">
                                                            <Setter Property="Text" Value="{x:Static strings:ViewsTexts.Misc_Events_NotImmediate}"/>
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Immediate}" Value="True">
                                                            <Setter Property="Text" Value="{x:Static strings:ViewsTexts.Misc_Events_Immediate}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="{x:Static strings:ViewsTexts.MainWindow_UpcomingEvents_Name}" 
                                            DisplayMemberBinding="{Binding Track.FriendlyName}"
                                            Width="268"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>

            <Grid Grid.Column="1" Margin="8 0 8 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_Playlist}" Grid.Column="0" VerticalAlignment="Bottom"/>

                        <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                            <ToggleButton Padding="4" Margin="4 0 0 0" IsChecked="{Binding EnableDeleteMode}"
                                          Style="{StaticResource FlatToggleButtonStyle}"
                                          ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_DeleteMode}">
                                <Image Source="/Images/Icons/Toolbar/delete_row.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                            </ToggleButton>

                            <ToggleButton Padding="4" Margin="4 0 0 0" IsChecked="{Binding EnableLoopMode}"
                                          Style="{StaticResource FlatToggleButtonStyle}"
                                          ToolTip="{x:Static strings:ViewsTexts.MainWindow_Tooltip_LoopMode}">
                                <Image Source="/Images/Icons/Toolbar/loop.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                            </ToggleButton>
                        </StackPanel>
                    </Grid>

                    <ListView ItemsSource="{Binding PlaylistManager.Tracks}" SelectedItem="{Binding SelectedTrack}"
                          Name="playlist" SelectionMode="Extended" AlternationCount="2" Grid.Row="1"
                          MouseDown="UpcomingEventsListView_MouseDown" SelectionChanged="playlist_SelectionChanged" 
                          Style="{StaticResource ListViewStyle}" Margin="0 4 0 0"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"                          
                          dd:DragDrop.DropHandler="{Binding .}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn x:Name="PlaylistFriendlyNameColumn" Width="360">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="0" Click="PlaylistColumnHeader_Click"
                                                              Content="{x:Static strings:ViewsTexts.MainWindow_Playlist_File}"/>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Grid.Column="0" Orientation="Horizontal">
                                                <Image Width="16" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor">
                                                    <Image.Style>
                                                        <Style TargetType="{x:Type Image}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type tracks:AudioFileTrack}">
                                                                    <Setter Property="Source" Value="/Images/Icons/Playlist/audio_file.png"/>
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type tracks:TimeAnnouncementTrack}">
                                                                    <Setter Property="Source" Value="/Images/Icons/Playlist/alarm_clock.png"/>
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type tracks:RandomFileTrack}">
                                                                    <Setter Property="Source" Value="/Images/Icons/Playlist/music_folder.png"/>
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type tracks:PlayerCommandTrack}">
                                                                    <Setter Property="Source" Value="/Images/Icons/Playlist/remote_control.png"/>
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type tracks:PlaylistFileTrack}">
                                                                    <Setter Property="Source" Value="/Images/Icons/Playlist/playlist_file.png"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>

                                                <TextBlock Text="{Binding Path=FriendlyName, Mode=OneWay}"
                                           Margin="4 0 0 0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Width="120" x:Name="PlaylistDurationColumn">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="1" Click="PlaylistColumnHeader_Click"
                                                              Content="{x:Static strings:ViewsTexts.MainWindow_Playlist_Duration}"/>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Duration, StringFormat=hh\\:mm\\:ss, Mode=OneWay, TargetNullValue='--:--:--'}"
                                                   HorizontalAlignment="Stretch" TextAlignment="Right"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

                                <Style.Triggers>
                                    <!-- Style for Next Track -->
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Mode="OneWay" NotifyOnSourceUpdated="True" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource SameObjectToBoolConverter}">
                                                <Binding Path="DataContext.PlaylistManager.NextTrack" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListView}"  />
                                                <Binding Path="."></Binding>
                                            </MultiBinding>
                                        </DataTrigger.Binding>

                                        <DataTrigger.Setters>
                                            <Setter Property="Background" Value="ForestGreen"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                    <!-- Style for Current Track -->
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Mode="OneWay" NotifyOnSourceUpdated="True" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource SameObjectToBoolConverter}">
                                                <Binding Path="DataContext.PlaylistManager.CurrentTrack" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListView}"  />
                                                <Binding Path="."></Binding>
                                            </MultiBinding>
                                        </DataTrigger.Binding>

                                        <DataTrigger.Setters>
                                            <Setter Property="Background" Value="Red"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                    <!-- Style for Loop Mode -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="True">
                                                <Condition.Binding>
                                                    <MultiBinding Mode="OneWay" NotifyOnSourceUpdated="True" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource SameObjectToBoolConverter}">
                                                        <Binding Path="DataContext.PlaylistManager.LastTrack" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListView}"  />
                                                        <Binding Path="."></Binding>
                                                    </MultiBinding>
                                                </Condition.Binding>
                                            </Condition>

                                            <Condition Value="True">
                                                <Condition.Binding>
                                                    <Binding Path="DataContext.EnableLoopMode" Mode="OneWay" NotifyOnSourceUpdated="True" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListView}"  />
                                                </Condition.Binding>
                                            </Condition>
                                        </MultiDataTrigger.Conditions>

                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Background" Value="Purple"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>

                                    <!-- Selected Style -->
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>

                                    <!-- MouseOver Style -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_PlaySelectedTrack}" Command="{Binding PlaySelectedTrackCommand}"/>
                                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_MarkAsNext}" Command="{Binding SelectedAsNextTrackCommand}"/>

                                <Separator/>

                                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Cue}" Command="{Binding OpenPreListenCommand}"/>

                                <Separator/>

                                <MenuItem Header="{x:Static strings:ViewsTexts.Misc_Cut}" InputGestureText="Ctrl+X"
                                          Command="{Binding CutTracksCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}">
                                    <MenuItem.Icon>
                                        <Image Source="/Images/Icons/Toolbar/cut.png" />
                                    </MenuItem.Icon>
                                </MenuItem>

                                <MenuItem Header="{x:Static strings:ViewsTexts.Misc_Copy}" InputGestureText="Ctrl+C"
                                          Command="{Binding CopyTracksCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}">
                                    <MenuItem.Icon>
                                        <Image Source="/Images/Icons/Toolbar/copy.png" />
                                    </MenuItem.Icon>
                                </MenuItem>

                                <MenuItem Header="{x:Static strings:ViewsTexts.Misc_Paste}" InputGestureText="Ctrl+V"
                                          Command="{Binding PasteTracksCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/Images/Icons/Toolbar/paste.png" />
                                    </MenuItem.Icon>
                                </MenuItem>

                                <Separator/>

                                <MenuItem Header="{x:Static strings:ViewsTexts.MainWindow_Delete}" InputGestureText="Del"
                                          Command="{Binding RemoveTracksFromPlaylistCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}"/>
                            </ContextMenu>
                        </ListView.ContextMenu>

                        <ListView.InputBindings>
                            <KeyBinding Modifiers="Ctrl" Key="X" Command="{Binding CutTracksCommand}"
                                        CommandParameter="{Binding SelectedItems, ElementName=playlist}"/>
                            <KeyBinding Modifiers="Ctrl" Key="C" Command="{Binding CopyTracksCommand}"
                                        CommandParameter="{Binding SelectedItems, ElementName=playlist}"/>
                            <KeyBinding Modifiers="Ctrl" Key="V" Command="{Binding PasteTracksCommand}"/>

                            <KeyBinding Key="Delete" Command="{Binding RemoveTracksFromPlaylistCommand}"
                                        CommandParameter="{Binding SelectedItems, ElementName=playlist}"/>
                        </ListView.InputBindings>
                    </ListView>

                    <Border Background="White" Opacity="0.75" Grid.Row="1" Margin="0 4 0 0"
                    Visibility="{Binding PlaylistLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <usercontrols:LoadingSpinner LoadingText="{Binding PlaylistInfoText}" Grid.Row="1" Margin="0 4 0 0"
                                         Visibility="{Binding PlaylistLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>

                <Border Grid.Row="1" Margin="0 8 0 0"
                        BorderBrush="{StaticResource ControlBrightDefaultBorderBrush}" BorderThickness="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Background="{StaticResource ControlBrightDefaultBackground}" 
                                Grid.Column="0" Width="64" Height="64"/>

                        <Image Grid.Column="0" Source="{Binding SelectedTrackArt}" 
                               Width="64" Height="64" RenderOptions.BitmapScalingMode="HighQuality"/>

                        <Grid Grid.Column="1" Margin="10 0 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Artista -->
                            <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_Tags_Artist}" Grid.Column="0" Grid.Row="0" Foreground="{StaticResource ControlDisabledGlythColour}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <TextBlock Text="{Binding SelectedTrackTags.Artist}" Grid.Column="1" Grid.Row="0" Margin="8 0 0 0"
                                       FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <!-- Título -->
                            <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_Tags_Title}" Grid.Column="0" Grid.Row="1" Foreground="{StaticResource ControlDisabledGlythColour}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <TextBlock Text="{Binding SelectedTrackTags.Title}" Grid.Column="1" Grid.Row="1" Margin="8 0 0 0"
                                       FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <!-- Álbum -->
                            <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_Tags_Album}" Grid.Column="0" Grid.Row="2" Foreground="{StaticResource ControlDisabledGlythColour}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <TextBlock Text="{Binding SelectedTrackTags.Album}" Grid.Column="1" Grid.Row="2" Margin="8 0 0 0"
                                       FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <!-- Ano -->
                            <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_Tags_Year}" Grid.Column="2" Grid.Row="0" Foreground="{StaticResource ControlDisabledGlythColour}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <TextBlock Text="{Binding SelectedTrackTags.Year}" Grid.Column="3" Grid.Row="0" Margin="8 0 0 0"
                                       FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <!-- Gênero -->
                            <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_Tags_Genre}" Grid.Column="2" Grid.Row="1" Foreground="{StaticResource ControlDisabledGlythColour}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <TextBlock Text="{Binding SelectedTrackTags.Genre}" Grid.Column="3" Grid.Row="1" Margin="8 0 0 0"
                                       FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <!-- Comentário -->
                            <TextBlock Text="{x:Static strings:ViewsTexts.MainWindow_Tags_Comment}" Grid.Column="2" Grid.Row="2" Foreground="{StaticResource ControlDisabledGlythColour}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <TextBlock Text="{Binding SelectedTrackTags.Comment}" Grid.Column="3" Grid.Row="2" Margin="8 0 0 0"
                                       FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
