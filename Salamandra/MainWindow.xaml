<Window x:Class="Salamandra.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Salamandra"
        xmlns:converters="clr-namespace:Salamandra.Converters"
        xmlns:controls="clr-namespace:Salamandra.Controls"
        xmlns:extensions="clr-namespace:Salamandra.Extensions"
        xmlns:enums="clr-namespace:Salamandra.Engine.Domain.Enums;assembly=Salamandra.Engine"
        xmlns:tracks="clr-namespace:Salamandra.Engine.Domain.Tracks;assembly=Salamandra.Engine"
        xmlns:usercontrols="clr-namespace:Salamandra.UserControls"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="540" Width="960"
        WindowStartupLocation="CenterScreen" Closing="Window_Closing"
        UseLayoutRounding="True" Loaded="Window_Loaded" WindowState="Maximized">
    <Window.Resources>
        <converters:SameObjectToBoolConverter x:Key="SameObjectToBoolConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:DataTypeConverter x:Key="DataTypeConverter"/>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Arquivo">
                <MenuItem Header="Novo" Command="{Binding NewPlaylistCommand}" />
                <MenuItem Header="Abrir..." Command="{Binding OpenPlaylistCommand}" />
                <MenuItem Header="Salvar" Command="{Binding SavePlaylistCommand}" />
                <MenuItem Header="Salvar como..." Command="{Binding SavePlaylistAsCommand}"/>
            </MenuItem>

            <MenuItem Header="Playlist">
                <MenuItem Header="Adicionar arquivos de áudio..." Command="{Binding AddFilesToPlaylistCommand}"/>
                <MenuItem Header="Adicionar locução de horário..." Command="{Binding AddTimeAnnouncementTrackCommand}"/>
                <MenuItem Header="Adicionar arquivo aleatório de pasta..." Command="{Binding AddRandomTrackCommand}"/>
                <Separator/>
                <MenuItem Header="Remover selecionadas" Command="{Binding RemoveTracksFromPlaylistCommand}" CommandParameter="{Binding SelectedItems, ElementName=playlist}"/>
                <Separator/>
                <MenuItem Header="Embaralhar playlist" Command="{Binding ShufflePlaylistCommand}"/>
            </MenuItem>

            <MenuItem Header="Ferramentas">
                <MenuItem Header="Configurações" Command="{Binding OpenSettingsCommand}"/>
            </MenuItem>
        </Menu>

        <!-- Top Grid -->
        <Grid DockPanel.Dock="Top" Margin="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Linha Superior -->
            <StackPanel Grid.Column="0">
                <TextBlock Text="Reproduzindo agora" HorizontalAlignment="Left">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Border Height="64" Margin="0 4 0 0" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding PlaylistManager.CurrentTrack.FriendlyName}" 
                           FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
            </StackPanel>

            <StackPanel Grid.Column="1" Margin="8 0 0 0">
                <TextBlock Text="Próxima faixa"/>
                <Border Height="64" Margin="0 4 0 0"
                    BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding PlaylistManager.NextTrack.FriendlyName}"
                           FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
            </StackPanel>

            <!-- Linha Inferior -->
            <Grid Grid.Column="0" Grid.Row="1" Margin="0 8 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0">
                    <TextBlock Text="Tempo Restante"/>
                    <Border Height="48"  BorderBrush="Black" BorderThickness="1" Margin="0 4 0 0">
                        <TextBlock Text="{Binding RemainingTime, StringFormat='mm\\:ss', TargetNullValue='--:--', FallbackValue='00:00'}"
                           FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </StackPanel>

                <!--
                <Grid Grid.Column="1" Margin="8 0 8 0" VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="L" VerticalAlignment="Center"/>
                    <ProgressBar Grid.Row="0" Grid.Column="1" Height="18" Margin="4 0 0 0"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="R" VerticalAlignment="Center"/>
                    <ProgressBar Grid.Row="1" Grid.Column="1" Height="18" Margin="4 8 0 0"/>
                </Grid>
                -->

                <StackPanel Grid.Column="2">
                    <TextBlock Text="Horário de Término"/>
                    <Border Height="48"  BorderBrush="Black" BorderThickness="1" Margin="0 4 0 0">
                        <TextBlock Text="{Binding EndingTimeOfDay, StringFormat='hh\\:mm\\:ss', TargetNullValue='--:--:--', FallbackValue='00:00:00'}"
                           FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </StackPanel>
            </Grid>

            <StackPanel Grid.Column="1" Grid.Row="1" Margin="8 8 0 0">
                <TextBlock Text="{Binding CurrentDateTime, StringFormat='ddd, dd\\/MM\\/yyyy'}"
                           HorizontalAlignment="Center" FontWeight="DemiBold"/>
                <Border Height="48" Margin="0 4 0 0"
                        BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding CurrentDateTime, StringFormat=HH\\:mm\\:ss}"
                           FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
            </StackPanel>
        </Grid>

        <!-- Seek Bar -->
        <controls:ExtendedSlider DockPanel.Dock="Bottom" Minimum="0" x:Name="SeekBar" VerticalAlignment="Center" IsEnabled="{Binding AllowSeekDrag}"                            
                                 Maximum="{Binding TrackLengthInSeconds, Mode=OneWay}" Value="{Binding TrackPositionInSeconds}"                                     
                                 TickFrequency="1" IsSnapToTickEnabled="True" LargeChange="20" SmallChange="5"                                     
                                 DragStartedCommand="{Binding SeekBarDragStartedCommand}" DragCompletedCommand="{Binding SeekBarDragCompletedCommand}"
                                 AutoToolTipPlacement="TopLeft" CustomToolTipContent="{Binding TrackPositionTime, Mode=OneWay, StringFormat={}{0:hh':'mm':'ss}, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="8 8 8 8"/>

        <!-- Controls Grid -->
        <Grid DockPanel.Dock="Bottom" Margin="8 8 8 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Width="30" Height="30" Command="{Binding StartPlaybackCommand}">
                <Image Source="/Images/Icons/Player/play.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </Button>

            <Button Grid.Column="1" Margin="8 0 0 0" Width="30" Height="30" Command="{Binding StopPlaybackCommand}">
                <Image Source="/Images/Icons/Player/stop.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </Button>

            <ToggleButton Grid.Column="2" Margin="8 0 0 0" Width="30" Height="30" Command="{Binding TogglePlayPauseCommand}" IsChecked="{Binding IsPaused}">
                <Image Source="/Images/Icons/Player/pause.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </ToggleButton>

            <Button Grid.Column="3" Margin="8 0 0 0" Width="30" Height="30" Command="{Binding NextTrackCommand}">
                <Image Source="/Images/Icons/Player/next.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </Button>

            <Button Grid.Column="4" Margin="8 0 0 0" Width="30" Height="30" Command="{Binding StopAfterCurrentCommand}">
                <Image Source="/Images/Icons/Player/stop-next.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>
            </Button>

            <ComboBox Grid.Column="5" SelectedItem="{Binding PlaylistManager.PlaylistMode}"
                      ItemsSource="{Binding Source={extensions:EnumBindingSource {x:Type enums:PlaylistMode}}}"
                      HorizontalAlignment="Left" VerticalAlignment="Center" Width="150" Margin="8 0 0 0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding UpdateNextTrackCommand}"></i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <StackPanel Orientation="Horizontal" Grid.Column="6" Margin="8 0 0 0">
                <Image Source="/Images/Icons/Player/volume_up.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Height="24" Width="24"/>

                <controls:ExtendedSlider Value="{Binding CurrentVolume}" x:Name="VolumeControl" 
                                         Width="128" VerticalAlignment="Center" Margin="8 0 0 0"
                                         Minimum="0" Maximum="1" LargeChange="0.2" SmallChange="0.05" 
                                         TickFrequency="0.1" AutoToolTipPlacement="TopLeft" 
                                         CustomToolTipContent="{Binding CurrentVolume, Mode=OneWay, StringFormat={}{0:P0}, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding VolumeControlValueChangedCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls:ExtendedSlider>
            </StackPanel>

            <StackPanel Grid.Column="7">
                <TextBlock Text="{Binding TrackPositionTime, StringFormat=mm\\:ss, TargetNullValue='--:--', FallbackValue='00:00', Mode=OneWay}" 
                           FontSize="16" FontWeight="Bold" HorizontalAlignment="Right"/>
                <TextBlock Text="{Binding TrackLengthTime, StringFormat=mm\\:ss, TargetNullValue='--:--', FallbackValue='00:00', Mode=OneWay}"
                           FontWeight="Bold" HorizontalAlignment="Right"/>
            </StackPanel>
        </Grid>

        <Grid Margin="8 0 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="420"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Próximos Eventos" Grid.Column="0" VerticalAlignment="Bottom"/>

                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                        <Button Command="{Binding PlayLateEventsCommand}" Padding="4"
                                Style="{StaticResource FlatButtonStyle}">
                            <controls:AutoDisableImage Source="/Images/Icons/Toolbar/play.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                        </Button>

                        <Button Command="{Binding DiscardLateEventsCommand}" Padding="4" Margin="4 0 0 0"
                                Style="{StaticResource FlatButtonStyle}">
                            <controls:AutoDisableImage Source="/Images/Icons/Toolbar/trash.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                        </Button>

                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="4 0 0 0"/>

                        <Button Command="{Binding OpenEventListCommand}" Padding="4" Margin="4 0 0 0"
                                Style="{StaticResource FlatButtonStyle}">
                            <Image Source="/Images/Icons/Toolbar/calendar.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16"/>
                        </Button>
                    </StackPanel>
                </Grid>

                <ListView Grid.Row="1" Margin="0 4 0 0" ItemsSource="{Binding ScheduleManager.EventsQueue}" SelectionMode="Single"
                          Style="{StaticResource ListViewStyle}" ItemContainerStyle="{StaticResource ListViewItemStyle}"
                          Name="UpcomingEventsListView" MouseDown="UpcomingEventsListView_MouseDown">
                    <ListView.View>
                        <GridView>
                            <!-- Icon -->
                            <GridViewColumn Header="Hora" DisplayMemberBinding="{Binding StartDateTime, StringFormat='HH:mm:ss'}"
                                            Width="60"/>
                            <GridViewColumn Header="Início" DisplayMemberBinding="{converters:SwitchBinding Immediate, Imediato, Espera}"
                                            Width="60"/>
                            <GridViewColumn Header="Evento" DisplayMemberBinding="{Binding Track.FriendlyName}"
                                            Width="280"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>

            <ListView ItemsSource="{Binding PlaylistManager.Tracks}" SelectedItem="{Binding SelectedTrack}"
                  Name="playlist" SelectionMode="Extended" HorizontalContentAlignment="Stretch"
                  Margin="8 0 8 0" AlternationCount="2" Grid.Column="1" MouseDown="UpcomingEventsListView_MouseDown">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Orientation="Horizontal">
                                <Image Width="16" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type tracks:AudioFileTrack}">
                                                    <Setter Property="Source" Value="/Images/Icons/Playlist/audio_file.png"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type tracks:TimeAnnouncementTrack}">
                                                    <Setter Property="Source" Value="/Images/Icons/Playlist/alarm_clock.png"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type tracks:RandomFileTrack}">
                                                    <Setter Property="Source" Value="/Images/Icons/Playlist/music_folder.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>

                                <TextBlock Text="{Binding Path=FriendlyName, Mode=OneWay}"
                                           Margin="4 0 0 0"/>
                            </StackPanel>
                            <TextBlock Grid.Column="2" Text="{Binding Duration, StringFormat=hh\\:mm\\:ss, Mode=OneWay, TargetNullValue='--:--:--'}"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <!-- Style for Alternation -->
                            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                                <Setter Property="Background" Value="#f0f0f0" />
                            </Trigger>

                            <!-- Style for Next Track -->
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Mode="OneWay" NotifyOnSourceUpdated="True" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource SameObjectToBoolConverter}">
                                        <Binding Path="DataContext.PlaylistManager.NextTrack" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListView}"  />
                                        <Binding Path="."></Binding>
                                    </MultiBinding>
                                </DataTrigger.Binding>

                                <DataTrigger.Setters>
                                    <Setter Property="Background" Value="ForestGreen"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger.Setters>
                            </DataTrigger>

                            <!-- Style for Current Track -->
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Mode="OneWay" NotifyOnSourceUpdated="True" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource SameObjectToBoolConverter}">
                                        <Binding Path="DataContext.PlaylistManager.CurrentTrack" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListView}"  />
                                        <Binding Path="."></Binding>
                                    </MultiBinding>
                                </DataTrigger.Binding>

                                <DataTrigger.Setters>
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger.Setters>
                            </DataTrigger>

                            <!-- Selected Style -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>

                            <!-- MouseOver Style -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>

                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Tocar faixa selecionada" Command="{Binding PlaySelectedTrackCommand}"/>
                        <MenuItem Header="Marcar como próxima" Command="{Binding SelectedAsNextTrackCommand}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>

            <Border Background="White" Opacity="0.75" Grid.Column="1"
                    Visibility="{Binding PlaylistLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>

            <usercontrols:LoadingSpinner LoadingText="{Binding PlaylistInfoText}" Grid.Column="1"
                                         Visibility="{Binding PlaylistLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>
    </DockPanel>
</Window>
